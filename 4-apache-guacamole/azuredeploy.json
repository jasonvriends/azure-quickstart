{ 
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",

    "parameters": {
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "guac",
            "metadata": {
                "description": "Input your desired Virtual Machine dns label prefix.<br/><br/> Note: a suffix of -vm is appended to the Virtual Machine name."
            }
        },
        "size": {
            "type": "string",
            "defaultValue": "Standard_B1ms",
            "metadata": {
                "description": "Input your desired Virtual Machine instance size (e.g. Standard_B1ms)."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "vmadmin",
            "metadata": {
                "description": "Input your desired Virtual Machine administrator username."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "publickey"
            ],
            "metadata": {
                "description": "Select your desired Virtual Machine authentication type."
            }
        },
        "pwdOrPsk": {
            "type": "securestring",
            "metadata": {
                "description": "Input your desired Virtual Machine administrator password or SSH Public Key."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "innovation-vnet",
            "metadata": {
                "description": "Input your desired Virtual Network name."
            } 
        },
        "vnetSubnetName": {
            "type": "string",
            "defaultValue": "paz-subnet",
            "metadata": {
                "description": "Input the name of your Virtual Network subnet."
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "defaultValue": "networking-innovation-rg",
            "metadata": {
                "description": "Input the Resource Group where your Virtual Network resides."
            }
        },
        "ipAddress": {
            "type": "string",
            "defaultValue": "public",
            "allowedValues": [
                "private",
                "public"
            ],
            "metadata": {
                "description": "Select your desired ip address type."
            }
        },
        "mysqlRootPwd": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Input the MySQL root database password."
            }
        },
        "dbName": {
            "type": "string",
            "defaultValue": "guacamole_db",
            "metadata": {
                "description": "Input the name of the Apache Guacamole database."
            }
        },
        "dbUser": {
            "type": "string",
            "defaultValue": "guacamole_user",
            "metadata": {
                "description": "Input the name of the user to be granted access to the Apache Guacamole database."
            }
        },
        "dbUserPwd": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Input the password for the user to be granted access to the Apache Guacamole database."
            }
        }
    },

    "variables": {
        "apiversion": "2018-10-01",
        "dnslabelprefix": "[trim(concat(parameters('dnsLabelPrefix'),uniqueString(resourceGroup().id)))]",
        "size": "[trim(parameters('size'))]",
        "ospublisher": "Canonical",
        "osoffer": "UbuntuServer",
        "ossku": "18.04-LTS",
        "osversion": "latest",
        "instances": 1,
        "adminusername": "[trim(parameters('adminUsername'))]",
        "authenticationtype": "[trim(parameters('authenticationtype'))]",
        "pwdorpsk": "[trim(parameters('pwdOrPsk'))]",
        "ipaddress": "[trim(parameters('ipAddress'))]",
        "vnetname": "[trim(parameters('vnetName'))]",
        "vnetsubnetname": "[trim(parameters('vnetSubnetName'))]",
        "vnetresourcegroup": "[trim(parameters('vnetResourceGroup'))]",
        "vnetid": "[resourceId(variables('vnetresourcegroup'), 'Microsoft.Network/virtualNetworks', variables('vnetname'))]",
        "subnetref": "[concat(variables('vnetid'),'/subnets/', variables('vnetsubnetname'))]",
        "publicIp": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses/',concat(variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-pip'))]"
        },
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', variables('adminusername'), '/.ssh/authorized_keys')]",
                        "keyData": "[variables('pwdorpsk')]"
                    }
                ]
            }
        },
        "mysqlrootpwd":"[parameters('mysqlRootPwd')]",
        "dbname":"[parameters('dbName')]",
        "dbuser":"[parameters('dbUser')]",
        "dbuserpwd":"[parameters('dbUserPwd')]"
       
    },

    "resources": [

        {
            "apiVersion": "[variables('apiVersion')]",
            "condition": "[equals(variables('ipaddress'),'public')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-pip')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnslabelprefix'),if(lessOrEquals(variables('instances'),1),'',copyindex(1)))]"
                }
            },
            "copy": {
                "name": "pipCount",
                "count": "[variables('instances')]"
            }            
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-pip')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetref')]"
                            },
                            "publicIPAddress": "[if(equals(variables('ipaddress'),'public'), variables('publicIp'), json('null'))]"
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicCount",
                "count": "[variables('instances')]"
            }            
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-vm')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-nic'))]"
            ],
            "properties": {
                "hardwareprofile": {
                    "vmsize": "[variables('size')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-vm')]",
                    "adminUsername": "[variables('adminusername')]",
                    "adminPassword": "[if(equals(variables('authenticationtype'), 'password'), variables('pwdorpsk'), json('null'))]",
                    "linuxConfiguration": "[if(equals(variables('authenticationtype'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('ospublisher')]",
                        "offer": "[variables('osoffer')]",
                        "sku": "[variables('ossku')]",
                        "version": "[variables('osversion')]"
                    },
                    "osdisk": {
                        "name": "[concat(variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-osdisk')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "caching": "ReadWrite"
                    }
                },
                "networkprofile": {
                    "networkinterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-nic'))]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "vmCount",
                "count": "[variables('instances')]"
            }            
        },

        {

            "apiVersion": "[variables('apiVersion')]",
            "name": "[concat(variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-vm/custom-script-extension')]",            
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[resourceGroup().location]",
            "comments" : "/var/lib/waagent/custom-script/download/0/",
            "copy": {
                "name": "extensionCount",
                "count": "[variables('instances')]"
            },
            "dependsOn": [
                "[concat(variables('dnslabelprefix'), if(lessOrEquals(variables('instances'),1),'',copyindex(1)),'-vm')]"
            ],
            "tags": {
                "displayName": "Custom Script Extension"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": false,
              "settings": {
                "commandToExecute": "[concat('bash entrypoint.sh', ' --nginx', ' --guacamole', ' --mysql', ' --mysql-root-pwd ', variables('mysqlrootpwd'), ' --mysql-db-name ', variables('dbname'), ' --mysql-db-user ', variables('dbuser'), ' --mysql-db-user-pwd ', variables('dbuserpwd'))]",
                "fileUris": [
                    "https://raw.githubusercontent.com/jasonvriends/apache-guacamole/master/local-installation/entrypoint.sh", 
                    "https://raw.githubusercontent.com/jasonvriends/apache-guacamole/master/local-installation/guacamole-install.sh", 
                    "https://raw.githubusercontent.com/jasonvriends/apache-guacamole/master/local-installation/mysql-install.sh",
                    "https://raw.githubusercontent.com/jasonvriends/apache-guacamole/master/local-installation/nginx-install.sh",
                    "https://raw.githubusercontent.com/jasonvriends/apache-guacamole/master/local-installation/nginx-ssl-install.sh"
                ]
              }
            }
        }

    ]
}